<main role="main" class="container-fluid">

<br/>
<br/>

<div class="row align-items-center">
	<div class="col-6">
		<!-- <img src="images/dark_tree.svg" class="img-fluid" alt="Dark Kinase phylogenetic tree"> -->
		<div id="bubble_vis"></div>
	</div>
	<div class="col-1"></div>
	<div class="col-5">
		<p/>Hello and welcome to the Dark Kinase Knowledge Base
		Prototype. This website will serve as a test bed for ideas concerning how
		to display and collate information concerning understudied kinases.

		<p/>This website focuses on the work associated with the Kinase IDG
		based at the University of North Carolina, Washington University at St
		Louis and Harvard. This consortium is focused on developing a better
		understanding of the approximately 160 kinases where their function in
		human biology is poorly understood. During the first stages of this
		project, we are focusing on five kinases.
		
		<h4>Focus Kinases</h4>
		<ul>
			<li><a href="/kinase/PKMYT1">PKMYT1</a></li>
			<li><a href="/kinase/TLK2">TLK2</a></li>
			<li><a href="/kinase/BRSK2">BRSK2</a></li>
			<li><a href="/kinase/CDK12">CDK12</a></li>
			<li><a href="/kinase/CDK13">CDK13</a></li>
		</ul>

		<p/>In addition to this website, there are also several stand-alone <a
		  href="/tools">tools</a> associated with this project.
	</div>
</div>

<script src="https://d3js.org/d3.v4.js"></script>
<script>

var diameter = 840,
    format = d3.format(",d"),
    color = {"Tdark":"#3792EC", "Tbio":"#389732", "Tchem":"#F0F37F"}; // create a duct if cikirubg
    //d3.scaleOrdinal(d3.schemeCategory20c) // original coloring

var bubble = d3.pack()
    .size([diameter, diameter])
    .padding(1.5);

var svg = d3.select("#bubble_vis").append("svg")
    .attr("width", diameter)
    .attr("height", diameter)
    .attr("class", "bubble");

d3.json("javascripts/viz.json", function(error, data) {
  if (error) throw error;

  var root = d3.hierarchy(classes(data))
      .sum(function(d) { return d.value; })
      .sort(function(a, b) { return b.value - a.value; });

  bubble(root);
  var node = svg.selectAll(".node")
      .data(root.children)
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

  node.append("title")
      .text(function(d) { return d.data.className + ": " + format(d.value); });

  node.append("a")
      .attr("xlink:href", function(d){
        return "http://darkkinome.org/kinase/"+d.data.className.substring(0, d.r / 3);
      })
      .append("svg:circle")
      .attr("r", function(d) { return d.r; })
      .style("fill", function(d) {
        return color[d.data.packageName];
      })
      .style("stroke", "#000")
      .style("stroke-width", .2);

  d3.selection.prototype.moveToFront = function() {
      return this.each(function(){
        this.parentNode.appendChild(this);
      });
    };

  node.append("text")
      .attr("dy", ".3em")
      .style("text-anchor", "middle")
      .text(function(d) { return d.data.className.substring(0, d.r / 3); });

  node.on("mouseover", function (d) {
        d3.select(this).select("text")
            .style("font-size", "15px");
        d3.select(this).select("a")
            .attr("transform", "scale(1.2,1.2)");
        d3.select(this).moveToFront() });

  node.on("mouseout", function (d) {
        d3.select(this).select("text")
            .style("font-size", "10px");
        d3.select(this).select("a")
            .attr("transform", "scale(1.0,1.0)"); });
});

// Returns a flattened hierarchy containing all leaf nodes under the root.
function classes(root) {
  var classes = [];

  function recurse(name, node) {
    if (node.children) node.children.forEach(function(child) { recurse(node.name, child); });
    else classes.push({packageName: name, className: node.name, value: node.size});
  }

  recurse(null, root);
  return {children: classes};
}

d3.select(self.frameElement).style("height", diameter + "px");

</script>

</main>
